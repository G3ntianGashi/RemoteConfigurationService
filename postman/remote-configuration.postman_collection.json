{
	"info": {
		"_postman_id": "5c9370f8-3512-41d1-b7b1-c5ba5e36c1a2",
		"name": "remote-configuration",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38344495"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test@gmail.com\",\r\n  \"password\": \"ciaociao\",\r\n  \"passwordConfirm\": \"ciaociao\",\r\n  \"firstName\": \"hohoho\",\r\n  \"lastName\": \"hohoho\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/Auth/Register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test@gmail.com\",\r\n  \"password\": \"ciaociao\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/Auth/Login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"Login"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefreshToken",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/Auth/RefreshToken",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"RefreshToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "ResetPassword",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test@gmail.com\",\r\n  \"password\": \"ciaociao1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/Auth/ResetPassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Auth",
								"ResetPassword"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "EditUser",
					"item": [
						{
							"name": "DataOk",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AuthorizationToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userId\": 7,\r\n  \"firstName\": \"Gentian\",\r\n  \"lastName\": \"Gashi\",\r\n  \"active\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/User/EditUser",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"User",
										"EditUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "WrongUserId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AuthorizationToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userId\": 100000,\r\n  \"firstName\": \"Gentian1\",\r\n  \"lastName\": \"Gashi\",\r\n  \"active\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/User/EditUser",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"User",
										"EditUser"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GetUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/User/GetUsers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"User",
								"GetUsers"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "GetUser",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/User/GetUser?userId=7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"User",
								"GetUser"
							],
							"query": [
								{
									"key": "userId",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUsersByActiveStatus",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/User/GetUsersByActiveStatus?isActive=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"User",
								"GetUsersByActiveStatus"
							],
							"query": [
								{
									"key": "isActive",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/User/DeleteUser?userId=7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"User",
								"DeleteUser"
							],
							"query": [
								{
									"key": "userId",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EditEmail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AuthorizationToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"oldEmail\": \"test@gmail.com\",\r\n  \"newEmail\": \"test1@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/User/EditEmail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"User",
								"EditEmail"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration",
			"item": [
				{
					"name": "GetConfigurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "90fcc9ac-91f2-44e3-9928-863b406012e5",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/Configuration/GetConfigurations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Configuration",
								"GetConfigurations"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetConfigurationsNoApiKey",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/Configuration/GetConfigurations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Configuration",
								"GetConfigurations"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetConfiguration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "90fcc9ac-91f2-44e3-9928-863b406012e5",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/Configuration/GetConfiguration?keyIdentifier=MyCustomKey",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Configuration",
								"GetConfiguration"
							],
							"query": [
								{
									"key": "keyIdentifier",
									"value": "MyCustomKey"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteConfiguration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "90fcc9ac-91f2-44e3-9928-863b406012e5",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/Configuration/DeleteConfiguration?keyIdentifier=MyCustomKey3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Configuration",
								"DeleteConfiguration"
							],
							"query": [
								{
									"key": "keyIdentifier",
									"value": "MyCustomKey3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "InsertConfiguration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "90fcc9ac-91f2-44e3-9928-863b406012e5",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"KeyIdentifier\": \"MyCustomKey3\",\r\n  \"configData\": {\r\n    \"porta1\": \"ciao11\",\r\n    \"porta2\": \"ciao22\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/Configuration/UpsertConfiguration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Configuration",
								"UpsertConfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateConfiguration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "90fcc9ac-91f2-44e3-9928-863b406012e5",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"KeyIdentifier\": \"MyCustomKey5\",\r\n  \"configData\": {\r\n    \"porta1\": \"ciao5\",\r\n    \"porta2\": \"ciao5\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/Configuration/UpsertConfiguration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"Configuration",
								"UpsertConfiguration"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}